{"version":3,"sources":["components/header.js","components/Chart.js","components/Graph.js","components/main.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","Chart","data","yLabel","x_dy","y_dy","xLabel","theme","VictoryTheme","material","scale","x","padding","left","top","right","bottom","label","axisLabelComponent","dy","dependentAxis","style","stroke","parent","border","setData","yKey","setter","multiplier","processedData","map","datum","Date","timestamp","y","console","log","Graph","useState","graphData","setGraphData","luxData","setLuxData","temperatureData","setTemperatureData","pressureData","setPressureData","graphNo","setGraphNo","useEffect","fetch","then","response","json","graphs","graph","action","item","index","onClick","Main","src","alt","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1c5dea4c.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default function Header() {\n  return (\n    <header className=\"bg-green-500 w-full flex-grow\">\n      <h1 className=\" text-4xl font-bold text-white pt-10 capitalize\">\n        Bradley the basil plant\n      </h1>\n      <h2 className=\"text-2xl font-normal text-gray-100 py-6\">\n        Because a &lt;£1 plant from the supermarket deserves £100 worth of\n        instrumentation, it's own dedicated website, a serverless backend, and [probably] a\n        fan following.\n      </h2>\n    </header>\n  );\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport {\n  VictoryChart,\n  VictoryTheme,\n  VictoryAxis,\n  VictoryLabel,\n  VictoryLine,\n} from \"victory\";\n\nexport default function Chart({\n  data,\n  yLabel,\n  x_dy = 20,\n  y_dy = -25,\n  xLabel = \"Date\",\n}) {\n  return (\n    <VictoryChart\n      theme={VictoryTheme.material}\n      scale={{ x: \"time\" }}\n      padding={{ left: 50, top: 10, right: 10, bottom: 50 }}\n    >\n      <VictoryAxis\n        label={xLabel}\n        axisLabelComponent={<VictoryLabel dy={x_dy} />}\n      />\n      <VictoryAxis\n        dependentAxis\n        label={yLabel}\n        axisLabelComponent={<VictoryLabel dy={y_dy} />}\n      />\n      <VictoryLine\n        style={{\n          data: { stroke: \"#c43a31\" },\n          parent: { border: \"1px solid #ccc\" },\n        }}\n        data={data}\n      />\n    </VictoryChart>\n  );\n}\n\nChart.propTypes = {\n  data: PropTypes.array,\n  xLabel: PropTypes.string,\n  yLabel: PropTypes.string,\n};\n","import React, { useEffect, useState } from \"react\";\nimport Chart from \"./Chart\";\n\nfunction setData(data, yKey, setter, multiplier = 1) {\n  if (data) {\n    const processedData = data.map((datum) => {\n      return {\n        x: new Date(datum.timestamp * 1000),\n        y: datum[yKey] * multiplier,\n      };\n    });\n    console.log(\"processedData\", processedData);\n    setter(processedData);\n  }\n}\n\nexport default function Graph() {\n  const [graphData, setGraphData] = useState();\n  const [luxData, setLuxData] = useState();\n  const [temperatureData, setTemperatureData] = useState();\n  const [pressureData, setPressureData] = useState();\n  const [graphNo, setGraphNo] = useState(0);\n\n  useEffect(() => {\n    fetch(\n      \"https://m2a6re6b9d.execute-api.us-east-2.amazonaws.com/default/get_all_plant_data\"\n    )\n      .then((response) => {\n        return response.json();\n      })\n      .then((data) => {\n        return setGraphData(data);\n      });\n  }, []);\n\n  useEffect(() => {\n    setData(graphData, \"lux\", setLuxData, 1);\n    setData(graphData, \"temperature\", setTemperatureData);\n    setData(graphData, \"pressure\", setPressureData);\n  }, [graphData]);\n\n  const graphs = [\n    {\n      graph: <Chart data={luxData} yLabel=\"Luminescence\" y_dy={-30} />,\n      label: \"Luminescence\",\n      action: () => {\n        setGraphNo(0);\n      },\n    },\n    {\n      graph: <Chart data={temperatureData} yLabel=\"Temperature\" y_dy={-30} />,\n      label: \"Temperature\",\n      action: () => {\n        setGraphNo(1);\n      },\n    },\n    {\n      graph: <Chart data={pressureData} yLabel=\"Pressure\" y_dy={-30} />,\n      label: \"Pressure\",\n      action: () => {\n        setGraphNo(2);\n      },\n    },\n  ];\n\n  return (\n    <div>\n      <div>{graphs[graphNo].graph}</div>\n      <div className=\"flex flex-col md:flex-row place-content-center border-gray-500 border-2 md:border-0 lg:border-2 rounded-md\">\n        {graphs.map((item, index) => (\n          <button\n            onClick={item.action}\n            className={`p-2 m-2 ${\n              index === graphNo ? \"bg-green-700\" : \"bg-green-500\"\n            } hover:bg-green-800 border-gray-500 border-2 rounded-md`}\n          >\n            {item.label}\n          </button>\n        ))}\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport Graph from \"./Graph\";\n\nexport default function Main() {\n  return (\n    <main className=\"container mx-auto h-auto p-5\">\n      <div className=\"grid grid-cols-1 md:grid-cols-2 md:grid-rows-1 auto-rows-max bg-green-100 border-green-500 border-2 rounded-md p-5 mt-5\">\n        <div className=\"text-lg p-5 \">\n          <h2 className=\"text-green-500 font-bold uppercase text-2xl underline\">\n            This is Bradley\n          </h2>\n          <p className=\"text-left text-gray-900\">\n            Bradley was bought in M&S in Birmingham in June 2021 for 31 pence on\n            a yello sticker, as he was \"past his best before date\"?!\n          </p>\n          <p className=\"text-left text-gray-900\">\n            Bradley deserves a second chance in a new home. So I rescued\n            Bradley, and am measuring him as he perks up.\n          </p>\n        </div>\n        <div>\n          <img\n            src=\"https://static-plant-site.s3.us-east-2.amazonaws.com/plant.jpg\"\n            alt=\"Bradley the Basil plant\"\n            className=\"rounded-md shadow-lg mt-5 lg:mt-0\"\n          />\n        </div>\n      </div>\n      <div className=\"grid grid-cols-1 md:grid-cols-2 md:grid-rows-1 auto-rows-max bg-green-100 border-green-500 border-2 rounded-md p-5 mt-10\">\n        <div className=\"text-left text-gray-900\">\n          Bradley is being montored with a Raspberry Pi Zero connected to a\n          Waveshere Sense Hat (b) and a Raspberry Pi Camera module, all\n          connected to the web through an Alfa Network USB WiFi ariel (Because I\n          bought a Raspberry Pi Zero not a Raspberry Pi Zero W with WiFi. Like a\n          noob.). Photos and measurements are being sent to AWS DynamoDB and S3\n          storage. This website was built with React and Tailwind CSS.\n        </div>\n        <div className=\"mt-5 md:mt-0\">\n          <Graph />\n        </div>\n      </div>\n    </main>\n  );\n}\n","import \"./App.css\";\nimport Header from \"./components/header\";\nimport Main from \"./components/main\";\n\nfunction App() {\n  return (\n    <div className=\"App bg-gray-100\">\n      <Header />\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}